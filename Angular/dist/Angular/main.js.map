{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employees/employee-list/employee-list.component.ts","./src/app/employees/employee-list/employee-list.component.html","./src/app/employees/employee/employee.component.ts","./src/app/employees/employee/employee.component.html","./src/app/employees/employees.component.ts","./src/app/employees/employees.component.html","./src/app/event-emitter.service.ts","./src/app/shared/employee.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular';\n}\n","<div class=\"container\">\n  <app-employees></app-employees>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { EmployeeComponent } from './employees/employee/employee.component';\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\nimport { EmployeeService } from './shared/employee.service';\nimport { EventEmitterService } from './event-emitter.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent,\n    EmployeeComponent,\n    EmployeeListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n  ],\n  providers: [EmployeeService, EventEmitterService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { EmployeeService } from 'src/app/shared/employee.service';\nimport { Employee } from 'src/app/shared/employee.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { EventEmitterService } from 'src/app/event-emitter.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css'],\n})\nexport class EmployeeListComponent implements OnInit {\n  constructor(\n    public service: EmployeeService,\n    public toastr: ToastrService,\n    private eventEmitterService: EventEmitterService\n  ) {}\n\n  ngOnInit() {\n    this.service.refreshList();\n  }\n\n  populateForm(emp: Employee) {\n    this.service.formData = Object.assign({}, emp);\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.service.deleteEmployee(id).subscribe((res) => {\n        this.service.refreshList();\n        this.resetFormFunctionInEmployeeComponent();\n        this.toastr.info('Successfully deleted', 'ATTENTION');\n      });\n    }\n  }\n\n  resetFormFunctionInEmployeeComponent() {\n    this.eventEmitterService.onEventEmitterServiceFunction();\n  }\n}\n","<table class=\"table table-hover\">\n\n  <thead>\n    <tr>\n      <div id=\"titleOfList\">Employee List</div>\n    </tr>\n    <tr>\n      <th>Full Name</th>\n      <th>Position</th>\n      <th>Mobile No</th>\n    </tr>\n  </thead>\n\n  <tr *ngFor=\"let emp of service.list\">\n    <td (click)=\"populateForm(emp)\">{{emp.Full_Name}}</td>\n    <td (click)=\"populateForm(emp)\">{{emp.Position}}</td>\n    <td (click)=\"populateForm(emp)\">{{emp.Mobile_No}}</td>\n    <td><button (click)=\"onDelete(emp.ID)\" class=\"btn btn-sm btn-danger\">X</button></td>\n  </tr>\n\n</table>","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/shared/employee.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { EventEmitterService } from 'src/app/event-emitter.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css'],\n})\nexport class EmployeeComponent implements OnInit {\n  constructor(\n    public service: EmployeeService,\n    public toastr: ToastrService,\n    private eventEmitterService: EventEmitterService\n  ) {}\n\n  ngOnInit() {\n    this.resetForm();\n    if (this.eventEmitterService.subsVar == undefined) {\n      this.eventEmitterService.subsVar = this.eventEmitterService.invokeResetFormFunctionInEmployeeComponent.subscribe(\n        (name: string) => {\n          this.resetForm();\n        }\n      );\n    }\n  }\n\n  isClearButtonIsClicked: Boolean = false;\n\n  resetForm(form?: NgForm) {\n    if (form != null) form.resetForm();\n    this.service.formData = {\n      ID: null,\n      Full_Name: '',\n      Position: '',\n      Mobile_No: '',\n    };\n  }\n\n  clearButtonIsClicked() {\n    this.isClearButtonIsClicked = true;\n  }\n\n  onSubmit(form: NgForm) {\n    if (this.isClearButtonIsClicked === true) {\n      this.resetForm(form);\n      this.service.refreshList();\n      this.isClearButtonIsClicked = false;\n    } else {\n      if (form.value.ID == null) this.insertRecord(form);\n      else this.updateRecord(form);\n    }\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postEmployee(form.value).subscribe((res) => {\n      this.toastr.info('Successfully inserted', 'ATTENTION');\n      this.resetForm(form);\n      this.service.refreshList();\n    });\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putEmployee(form.value).subscribe((res) => {\n      this.toastr.info('Successfully updated', 'ATTENTION');\n      this.resetForm(form);\n      this.service.refreshList();\n    });\n  }\n}\n","<form #form=\"ngForm\" (submit)=\"onSubmit(form)\" autocomplete=\"off\">\n  <input type=\"hidden\" name=\"ID\" #ID=\"ngModel\" [(ngModel)]=\"service.formData.ID\">\n  <div class=\"form-group\">\n    <label>Full Name</label>\n    <input name=\"Full_Name\" #Full_Name=\"ngModel\" [(ngModel)]=\"service.formData.Full_Name\" class=\"form-control\" required>\n    <div class=\"validation-error\" *ngIf=\"Full_Name.invalid && Full_Name.touched\">Full Name is required.</div>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Position</label>\n    <input name=\"Position\" #Position=\"ngModel\" [(ngModel)]=\"service.formData.Position\" class=\"form-control\" required>\n    <div class=\"validation-error\" *ngIf=\"Position.invalid && Position.touched\">Position is required.</div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <label>Mobile No</label>\n    <input name=\"Mobile_No\" #Mobile_No=\"ngModel\" [(ngModel)]=\"service.formData.Mobile_No\" class=\"form-control\" required>\n    <div class=\"validation-error\" *ngIf=\"Mobile_No.invalid && Mobile_No.touched\">Mobile No is required.</div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <button id=\"submitButton\" [disabled]=\"form.invalid\" class=\"btn btn-lg btn-primary\">Submit</button>\n    <button class=\"btn btn-lg btn-danger\" (click)=\"clearButtonIsClicked()\">Clear</button>\n  </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css'],\n})\nexport class EmployeesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"jumbtron\">\n  <div id=\"mainTitle\">CRUD Using ASP.NET Web API And Angular</div>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-md-5\">\n      <app-employee></app-employee>\n    </div>\n    <div class=\"col-md-7\">\n      <app-employee-list></app-employee-list>\n    </div>\n  </div>\n</div>","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventEmitterService {\n  invokeResetFormFunctionInEmployeeComponent = new EventEmitter();\n  subsVar: Subscription;\n  constructor() {}\n  onEventEmitterServiceFunction() {\n    this.invokeResetFormFunctionInEmployeeComponent.emit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Employee } from './employee.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmployeeService {\n  formData: Employee;\n  list: Employee[];\n  readonly rootURL = 'https://localhost:44360/api';\n\n  constructor(private http: HttpClient) {}\n\n  postEmployee(formData: Employee) {\n    return this.http.post(this.rootURL + '/Employee', formData);\n  }\n\n  refreshList() {\n    this.http\n      .get(this.rootURL + '/Employee')\n      .toPromise()\n      .then((res) => (this.list = res as Employee[]));\n  }\n\n  putEmployee(formData: Employee) {\n    return this.http.put(this.rootURL + '/Employee/' + formData.ID, formData);\n  }\n\n  deleteEmployee(id: number) {\n    return this.http.delete(this.rootURL + '/Employee/' + id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}